{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/chat/chat.component.html","webpack:///./src/app/login/login.component.html","webpack:///./src/app/settings/settings.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chat/chat.component.scss","webpack:///./src/app/chat/chat.component.ts","webpack:///./src/app/isExistName.guard.ts","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/settings/settings.component.scss","webpack:///./src/app/settings/settings.component.ts","webpack:///./src/app/shared/ngrx/actions/chat.action.ts","webpack:///./src/app/shared/ngrx/effects/chat.effect.ts","webpack:///./src/app/shared/ngrx/reducers/chat.reducers.ts","webpack:///./src/app/shared/ngrx/selectors/chat.selector.ts","webpack:///./src/app/shared/services/app.chat.service.ts","webpack:///./src/app/shared/services/sessionstorage.service.ts","webpack:///./src/environments/environment.prod.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"rxjs-chat\\\" [ngClass]=\\\"{'has-background-black': (isDark | async)}\\\">\\n  <ng-container *ngIf=\\\"isLogin | async; else login\\\">\\n    <div class=\\\"container\\\" >\\n      <nav class=\\\"navbar\\\" role=\\\"navigation\\\" aria-label=\\\"main navigation\\\" [ngClass]=\\\"{'is-black': (isDark | async)}\\\">\\n        <div class=\\\"navbar-brand\\\">\\n          <p class=\\\"navbar-item\\\">\\n            RXJS-CHAT\\n          </p>\\n\\n          <a\\n            (click)=\\\"toggleMenu()\\\"\\n            role=\\\"button\\\"\\n            class=\\\"navbar-burger burger\\\"\\n            aria-label=\\\"menu\\\"\\n            aria-expanded=\\\"false\\\"\\n            data-target=\\\"navbarBasicExample\\\"\\n          >\\n            <span aria-hidden=\\\"true\\\"></span>\\n            <span aria-hidden=\\\"true\\\"></span>\\n            <span aria-hidden=\\\"true\\\"></span>\\n          </a>\\n        </div>\\n\\n        <div\\n          id=\\\"navbarBasicExample\\\"\\n          class=\\\"navbar-menu\\\"\\n          [ngClass]=\\\"{ 'is-active': activeMenu, 'is-black': isDark | async }\\\"\\n        >\\n          <div class=\\\"navbar-end\\\">\\n            <div class=\\\"navbar-item\\\">\\n              <div class=\\\"buttons\\\">\\n                <a\\n                  class=\\\"button is-primary\\\"\\n                  routerLink=\\\"/chat\\\"\\n                  routerLinkActive=\\\"active\\\"\\n                >\\n                  chat\\n                  <span *ngIf=\\\"(count | async) != 0\\\" class=\\\"notifNotRead\\\">{{count | async}}</span>\\n                </a>\\n                <a\\n                  class=\\\"button is-light\\\"\\n                  routerLink=\\\"/settings\\\"\\n                  routerLinkActive=\\\"active\\\"\\n                >\\n                  settings\\n                </a>\\n                <a class=\\\"button is-light\\\" (click)=\\\"disconnect()\\\">\\n                  disconnect\\n                </a>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </nav>\\n    </div>\\n    <section\\n      class=\\\"hero is-light is-fullheight-with-navbar\\\"\\n      [ngClass]=\\\"{ 'is-dark': isDark | async }\\\"\\n    >\\n      <div class=\\\"hero-body\\\">\\n        <div class=\\\"container\\\">\\n          <router-outlet></router-outlet>\\n        </div>\\n      </div>\\n    </section>\\n  </ng-container>\\n  <ng-template #login>\\n    <section class=\\\"hero is-light is-fullheight\\\">\\n      <div class=\\\"hero-body\\\">\\n        <div class=\\\"container\\\">\\n          <router-outlet></router-outlet>\\n        </div>\\n      </div>\\n    </section>\\n  </ng-template>\\n</div>\\n\"","module.exports = \"<div>\\n  <ol id=\\\"boxScroll\\\" class=\\\"boxMessages\\\" (scroll)=\\\"onScroll($event)\\\">\\n    <ng-container *ngFor=\\\"let message of messages | async\\\">\\n      <li\\n        *ngIf=\\\"message?.description\\\"\\n        [ngClass]=\\\"{ 'is-right': (usernameStore | async) === message.name }\\\"\\n      >\\n        <div class=\\\"meta\\\">\\n          <small\\n            ><ng-container *ngIf=\\\"(usernameStore | async) !== message.name\\\"\\n              >{{ message.name }} - </ng-container\\n            >{{ formatDateAMPM(message.date) | async }}\\n            </small\\n          >\\n        </div>\\n        <div\\n          class=\\\"description\\\"\\n          [ngClass]=\\\"{\\n            'is-primary': (usernameStore | async) === message.name,\\n            'is-black': isDark | async\\n          }\\\"\\n        >\\n          <div [innerHTML]=\\\"message?.description | linkify\\\"></div>\\n          <ng-container *ngIf=\\\"isEmbedVideo(message?.description)\\\">\\n            <div [innerHTML]=\\\"embedVideo(message?.description)\\\"></div>\\n          </ng-container>\\n        </div>\\n      </li>\\n    </ng-container>\\n  </ol>\\n</div>\\n<div class=\\\"barActionMessage\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"columns\\\">\\n      <div class=\\\"column is-11\\\">\\n        <div class=\\\"field has-addons\\\">\\n          <div class=\\\"control\\\">\\n            <emoji-mart (emojiClick)=\\\"addEmoji($event)\\\" [ngClass]=\\\"{'is-close': !openSmiley}\\\" [style]=\\\"{ position: 'absolute', bottom: '40px', left: '0px' }\\\"></emoji-mart>\\n            <button class=\\\"button\\\" type=\\\"button\\\" (click)=\\\"toggleSmiley()\\\">\\n              <i class=\\\"far fa-smile\\\"></i>\\n            </button>\\n          </div>\\n          <div class=\\\"control is-expanded\\\" [ngClass]=\\\"{ 'is-loading': isLoading }\\\">\\n            \\n            <input\\n              class=\\\"input\\\"\\n              type=\\\"text\\\"\\n              [formControl]=\\\"message\\\"\\n              (keydown.enter)=\\\"sendMessage($event)\\\"\\n            />\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"column is-1\\\">\\n        <button class=\\\"button is-primary is-fullwidth\\\" (click)=\\\"sendMessage()\\\">\\n          Send\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n\\n<div id=\\\"ChatSignin\\\">\\n    <h1 class=\\\"title\\\">RXJS-Chat</h1>\\n    <div class=\\\"columns\\\">\\n        <div class=\\\"column is-6\\\">\\n        <div class=\\\"field\\\">\\n            <label class=\\\"label\\\">Please enter your name</label>\\n            <div class=\\\"control is-expanded has-icons-left\\\">\\n            <input class=\\\"input is-medium\\\" type=\\\"text\\\" placeholder=\\\"Enter your name and hit ENTER\\\"  [formControl]=\\\"username\\\"/>\\n            <span class=\\\"icon is-medium is-left\\\">\\n                <i class=\\\"fas fa-user\\\"></i>\\n            </span>\\n            </div>\\n            <p class=\\\"help is-danger\\\"></p>\\n        </div>\\n        <div class=\\\"field\\\">\\n            <div class=\\\"control\\\">\\n            <button class=\\\"button is-medium is-primary\\\" (click)=\\\"sendUsername()\\\">\\n                Join chat\\n            </button>\\n            </div>\\n        </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<form class=\\\"form\\\" [formGroup]=\\\"settings\\\" [ngClass]=\\\"{'is-dark': (isDark | async)}\\\">\\n  <div class=\\\"field\\\">\\n    <label class=\\\"label\\\">Username</label>\\n    <div class=\\\"control has-icons-left has-icons-right\\\">\\n      <input\\n        class=\\\"input\\\"\\n        type=\\\"text\\\"\\n        placeholder=\\\"Text input\\\"\\n        formControlName=\\\"username\\\"\\n      />\\n    </div>\\n  </div>\\n\\n  <div class=\\\"field\\\">\\n    <label class=\\\"label\\\">Interface Color</label>\\n    <div class=\\\"control radioBox\\\">\\n      <label\\n        class=\\\"radio\\\"\\n        [ngClass]=\\\"{ 'is-active': isActive(false, 'themeDark') }\\\"\\n      >\\n        <input type=\\\"radio\\\" formControlName=\\\"themeDark\\\" [value]=\\\"false\\\" />\\n        light\\n      </label>\\n      <label\\n        class=\\\"radio\\\"\\n        [ngClass]=\\\"{ 'is-active': isActive(true, 'themeDark') }\\\"\\n      >\\n        <input type=\\\"radio\\\" formControlName=\\\"themeDark\\\" [value]=\\\"true\\\" />\\n        dark\\n      </label>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"field\\\">\\n    <label class=\\\"label\\\">Clock Display</label>\\n    <div class=\\\"control radioBox\\\">\\n      <label\\n        class=\\\"radio\\\"\\n        [ngClass]=\\\"{ 'is-active': isActive(false, 'clock12hour') }\\\"\\n      >\\n        <input type=\\\"radio\\\" formControlName=\\\"clock12hour\\\" [value]=\\\"false\\\" />\\n        24 Hours\\n      </label>\\n      <label\\n        class=\\\"radio\\\"\\n        [ngClass]=\\\"{ 'is-active': isActive(true, 'clock12hour') }\\\"\\n      >\\n        <input type=\\\"radio\\\" formControlName=\\\"clock12hour\\\" [value]=\\\"true\\\" />\\n        12 Hours\\n      </label>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"field\\\">\\n    <label class=\\\"label\\\">Shorcut ( CTRL + ENTER )</label>\\n    <div class=\\\"control radioBox\\\">\\n      <label\\n        class=\\\"radio\\\"\\n        [ngClass]=\\\"{ 'is-active': isActive(false, 'shortcutEnter') }\\\"\\n      >\\n        <input type=\\\"radio\\\" formControlName=\\\"shortcutEnter\\\" [value]=\\\"false\\\" />\\n        No\\n      </label>\\n      <label\\n        class=\\\"radio\\\"\\n        [ngClass]=\\\"{ 'is-active': isActive(true, 'shortcutEnter') }\\\"\\n      >\\n        <input type=\\\"radio\\\" formControlName=\\\"shortcutEnter\\\" [value]=\\\"true\\\" />\\n        Yes\\n      </label>\\n    </div>\\n  </div>\\n</form>\\n\"","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { AppComponent } from './app.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { IsExistName } from './isExistName.guard';\nimport { ChatComponent } from './chat/chat.component';\n\nexport const appRouteList: Routes = [\n    {\n      path: 'login',\n      component: LoginComponent,\n      canActivate: [\n        IsExistName\n      ]\n    },\n    {\n      path: 'chat',\n      component: ChatComponent,\n      canActivate: [\n        IsExistName\n      ]\n    },\n    {\n      path: 'settings',\n      component: SettingsComponent,\n      canActivate: [\n        IsExistName\n      ]\n    },\n    {\n        path: '',\n        redirectTo: 'chat',\n        pathMatch: 'full'\n    }\n];\n\n@NgModule({\n    exports: [\n        RouterModule\n    ],\n    imports: [\n        RouterModule.forRoot(appRouteList)\n    ]\n})\nexport class AppRoutingModule {\n}","module.exports = \"nav.navbar {\\n  width: 100%;\\n}\\n\\n.notifNotRead {\\n  border-radius: 50%;\\n  color: black;\\n  background-color: white;\\n  border: 1px solid gray;\\n  width: 1.5em;\\n  height: 1.5em;\\n  font-size: 0.8em;\\n  position: absolute;\\n  right: -0.5em;\\n  top: -0.5em;\\n}\\n\\n.hero.is-fullheight-with-navbar .hero-body {\\n  align-items: normal;\\n}\\n\\n@media screen and (max-width: 1023px) {\\n  .navbar-menu.is-active {\\n    position: absolute;\\n    width: 100%;\\n  }\\n\\n  .navbar-menu.is-black {\\n    background-color: #0a0a0a;\\n    color: white;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9mcmFuY29pc2xvbmdhdHRlL0RvY3VtZW50cy9wcm9qZWN0L3J4anMtY2hhdC9jbGllbnQvc3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQUE7QUNDRjs7QURFQTtFQUNFLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLHVCQUFBO0VBQ0Esc0JBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxhQUFBO0VBQ0EsV0FBQTtBQ0NGOztBRENBO0VBQ0UsbUJBQUE7QUNFRjs7QURBQTtFQUNFO0lBQ0Usa0JBQUE7SUFDQSxXQUFBO0VDR0Y7O0VEREE7SUFDRSx5QkFBQTtJQUNBLFlBQUE7RUNJRjtBQUNGIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsibmF2Lm5hdmJhciB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ubm90aWZOb3RSZWFke1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGNvbG9yOiBibGFjaztcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGdyYXk7XG4gIHdpZHRoOiAxLjVlbTtcbiAgaGVpZ2h0OiAxLjVlbTtcbiAgZm9udC1zaXplOi44ZW07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IC0uNWVtO1xuICB0b3A6IC0uNWVtO1xufVxuLmhlcm8uaXMtZnVsbGhlaWdodC13aXRoLW5hdmJhciAuaGVyby1ib2R5IHtcbiAgYWxpZ24taXRlbXM6IG5vcm1hbDtcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAubmF2YmFyLW1lbnUuaXMtYWN0aXZlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgLm5hdmJhci1tZW51LmlzLWJsYWNrIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGEwYTBhO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgfVxufVxuIiwibmF2Lm5hdmJhciB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ubm90aWZOb3RSZWFkIHtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBjb2xvcjogYmxhY2s7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBib3JkZXI6IDFweCBzb2xpZCBncmF5O1xuICB3aWR0aDogMS41ZW07XG4gIGhlaWdodDogMS41ZW07XG4gIGZvbnQtc2l6ZTogMC44ZW07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IC0wLjVlbTtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi5oZXJvLmlzLWZ1bGxoZWlnaHQtd2l0aC1uYXZiYXIgLmhlcm8tYm9keSB7XG4gIGFsaWduLWl0ZW1zOiBub3JtYWw7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjNweCkge1xuICAubmF2YmFyLW1lbnUuaXMtYWN0aXZlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICAubmF2YmFyLW1lbnUuaXMtYmxhY2sge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwYTBhMGE7XG4gICAgY29sb3I6IHdoaXRlO1xuICB9XG59Il19 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { ChatState } from \"./shared/ngrx/reducers/chat.reducers\";\nimport { Store } from \"@ngrx/store\";\nimport { isLogin, getConfig, count } from \"./shared/ngrx/selectors/chat.selector\";\nimport { Observable } from \"rxjs\";\nimport { Start, UpdateConfig } from \"./shared/ngrx/actions/chat.action\";\nimport { map, take } from \"rxjs/operators\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"]\n})\nexport class AppComponent implements OnInit {\n  private _activeMenu: boolean;\n\n  constructor(private store: Store<ChatState>, private router: Router) {\n    this._activeMenu = false;\n    this.store.dispatch(new Start());\n  }\n\n  ngOnInit() {}\n\n  get isLogin(): Observable<boolean> {\n    return this.store.select(isLogin);\n  }\n\n  get activeMenu(){\n    return this._activeMenu;\n  }\n\n  set activeMenu(value: boolean){\n    this._activeMenu = value;\n  }\n\n  get count(): Observable<boolean>{\n    return this.store.select(count)\n  }\n\n  toggleMenu() {\n    this.activeMenu = !this.activeMenu;\n  }\n\n  get isDark(): Observable<Boolean> {\n    return this.store.select(getConfig).pipe(map(config => config.themeDark));\n  }\n\n  disconnect() {\n    this.store\n      .select(getConfig)\n      .pipe(take(1))\n      .subscribe(config => {\n        this.store.dispatch(\n          new UpdateConfig({\n            ...config,\n            username: \"\"\n          })\n        );\n      });\n    this.router.navigate([\"/login\"]);\n  }\n}\n","import { HttpClientModule } from \"@angular/common/http\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { RouterModule } from \"@angular/router\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { StoreModule } from \"@ngrx/store\";\nimport { StoreDevtoolsModule } from \"@ngrx/store-devtools\";\nimport { NgxLinkifyjsModule } from \"ngx-linkifyjs\";\nimport { ToastrModule } from \"ngx-toastr\";\nimport { environment } from \"src/environments/environment\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { ChatComponent } from \"./chat/chat.component\";\nimport { LoginComponent } from \"./login/login.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { ChatEffects } from \"./shared/ngrx/effects/chat.effect\";\nimport { ChatReducer } from \"./shared/ngrx/reducers/chat.reducers\";\nimport { EmbedVideo } from 'ngx-embed-video';\nimport { PickerModule } from '@ctrl/ngx-emoji-mart'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SettingsComponent,\n    LoginComponent,\n    ChatComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ToastrModule.forRoot({\n      positionClass: \"toast-top-center\"\n    }),\n    StoreModule.forRoot({ ChatReducer }),\n    RouterModule.forRoot([]),\n    EffectsModule.forRoot([ChatEffects]),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25, // Retains last 25 states\n      logOnly: environment.production // Restrict extension to log-only mode\n    }),\n    NgxLinkifyjsModule.forRoot(),\n    EmbedVideo.forRoot(),\n    PickerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \".boxMessages {\\n  /* Flexbox-specific styles */\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-start;\\n  /* General styling */\\n  font: 16px/1.3 sans-serif;\\n  height: calc(100vh - 220px);\\n  list-style-type: none;\\n  margin: 0 auto;\\n  padding: 8px;\\n  overflow: auto;\\n  width: 100%;\\n}\\n\\n/* Default styles for chat bubbles */\\n\\n.boxMessages li div {\\n  margin: 8px;\\n}\\n\\n.boxMessages li .meta {\\n  font-size: 0.8em;\\n}\\n\\n.boxMessages li .description {\\n  background: white;\\n  border-radius: 8px;\\n  padding: 8px 12px;\\n  margin: 5px 0;\\n}\\n\\n.boxMessages li .description div a {\\n  background: white;\\n  color: black;\\n}\\n\\n.boxMessages li .description.is-black {\\n  background-color: black;\\n  color: white;\\n}\\n\\n.boxMessages li .description.is-primary {\\n  color: white;\\n  background: #9C0201;\\n}\\n\\n/* Styles specific to our chat bubbles */\\n\\n.boxMessages li.ours {\\n  align-self: flex-end;\\n  /* Stick to the right side, please! */\\n  margin: 2px 0 2px 8px;\\n}\\n\\n.barActionMessage {\\n  position: fixed;\\n  bottom: 0;\\n  left: 0;\\n  width: 100%;\\n  padding: 24px;\\n}\\n\\n.is-right {\\n  align-self: flex-end;\\n  text-align: right;\\n}\\n\\nemoji-mart.is-close {\\n  display: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9mcmFuY29pc2xvbmdhdHRlL0RvY3VtZW50cy9wcm9qZWN0L3J4anMtY2hhdC9jbGllbnQvc3JjL2FwcC9jaGF0L2NoYXQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2NoYXQvY2hhdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDRCQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsdUJBQUE7RUFFQSxvQkFBQTtFQUNBLHlCQUFBO0VBQ0EsMkJBQUE7RUFDQSxxQkFBQTtFQUNBLGNBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtFQUNBLFdBQUE7QUNBSjs7QURLRSxvQ0FBQTs7QUFHRTtFQUNFLFdBQUE7QUNKTjs7QURNSTtFQUNFLGdCQUFBO0FDSk47O0FETUk7RUFDRSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7RUFDQSxhQUFBO0FDSk47O0FES007RUFDRSxpQkFBQTtFQUNBLFlBQUE7QUNIUjs7QURPTTtFQUNFLHVCQUFBO0VBQ0EsWUFBQTtBQ0xSOztBRE9NO0VBQ0ksWUFBQTtFQUNBLG1CQUFBO0FDTFY7O0FEVUUsd0NBQUE7O0FBQ0E7RUFDRSxvQkFBQTtFQUFzQixxQ0FBQTtFQUN0QixxQkFBQTtBQ05KOztBRFNFO0VBQ0ksZUFBQTtFQUNBLFNBQUE7RUFDQSxPQUFBO0VBQ0EsV0FBQTtFQUNBLGFBQUE7QUNOTjs7QURTRTtFQUNJLG9CQUFBO0VBQ0EsaUJBQUE7QUNOTjs7QURVSTtFQUNFLGFBQUE7QUNQTiIsImZpbGUiOiJzcmMvYXBwL2NoYXQvY2hhdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ib3hNZXNzYWdlcyB7XG4gICAgLyogRmxleGJveC1zcGVjaWZpYyBzdHlsZXMgKi9cbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIFxuICAgIC8qIEdlbmVyYWwgc3R5bGluZyAqL1xuICAgIGZvbnQ6IDE2cHgvMS4zIHNhbnMtc2VyaWY7XG4gICAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gMjIwcHgpO1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBwYWRkaW5nOiA4cHg7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgd2lkdGg6IDEwMCU7XG5cbiAgICBcbiAgfVxuICBcbiAgLyogRGVmYXVsdCBzdHlsZXMgZm9yIGNoYXQgYnViYmxlcyAqL1xuXG4gIC5ib3hNZXNzYWdlcyBsaSB7XG4gICAgZGl2e1xuICAgICAgbWFyZ2luOiA4cHg7XG4gICAgfVxuICAgIC5tZXRhe1xuICAgICAgZm9udC1zaXplOiAuOGVtO1xuICAgIH1cbiAgICAuZGVzY3JpcHRpb24ge1xuICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgICBwYWRkaW5nOjhweCAxMnB4O1xuICAgICAgbWFyZ2luOiA1cHggMDtcbiAgICAgIGRpdiBhIHtcbiAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgIGNvbG9yOiBibGFjaztcbiAgICAgIH1cbiAgICAgIFxuICAgICAgXG4gICAgICAmLmlzLWJsYWNre1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgfVxuICAgICAgJi5pcy1wcmltYXJ5e1xuICAgICAgICAgIGNvbG9yOndoaXRlO1xuICAgICAgICAgIGJhY2tncm91bmQ6ICM5QzAyMDE7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIFxuICAvKiBTdHlsZXMgc3BlY2lmaWMgdG8gb3VyIGNoYXQgYnViYmxlcyAqL1xuICAuYm94TWVzc2FnZXMgbGkub3VycyB7XG4gICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7IC8qIFN0aWNrIHRvIHRoZSByaWdodCBzaWRlLCBwbGVhc2UhICovXG4gICAgbWFyZ2luOiAycHggMCAycHggOHB4O1xuICB9XG5cbiAgLmJhckFjdGlvbk1lc3NhZ2V7XG4gICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICBib3R0b206IDA7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBwYWRkaW5nOiAyNHB4O1xuICB9XG5cbiAgLmlzLXJpZ2h0e1xuICAgICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XG4gICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgfVxuXG4gIGVtb2ppLW1hcnR7XG4gICAgJi5pcy1jbG9zZXtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICB9XG4iLCIuYm94TWVzc2FnZXMge1xuICAvKiBGbGV4Ym94LXNwZWNpZmljIHN0eWxlcyAqL1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgLyogR2VuZXJhbCBzdHlsaW5nICovXG4gIGZvbnQ6IDE2cHgvMS4zIHNhbnMtc2VyaWY7XG4gIGhlaWdodDogY2FsYygxMDB2aCAtIDIyMHB4KTtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZzogOHB4O1xuICBvdmVyZmxvdzogYXV0bztcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi8qIERlZmF1bHQgc3R5bGVzIGZvciBjaGF0IGJ1YmJsZXMgKi9cbi5ib3hNZXNzYWdlcyBsaSBkaXYge1xuICBtYXJnaW46IDhweDtcbn1cbi5ib3hNZXNzYWdlcyBsaSAubWV0YSB7XG4gIGZvbnQtc2l6ZTogMC44ZW07XG59XG4uYm94TWVzc2FnZXMgbGkgLmRlc2NyaXB0aW9uIHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgcGFkZGluZzogOHB4IDEycHg7XG4gIG1hcmdpbjogNXB4IDA7XG59XG4uYm94TWVzc2FnZXMgbGkgLmRlc2NyaXB0aW9uIGRpdiBhIHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIGNvbG9yOiBibGFjaztcbn1cbi5ib3hNZXNzYWdlcyBsaSAuZGVzY3JpcHRpb24uaXMtYmxhY2sge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgY29sb3I6IHdoaXRlO1xufVxuLmJveE1lc3NhZ2VzIGxpIC5kZXNjcmlwdGlvbi5pcy1wcmltYXJ5IHtcbiAgY29sb3I6IHdoaXRlO1xuICBiYWNrZ3JvdW5kOiAjOUMwMjAxO1xufVxuXG4vKiBTdHlsZXMgc3BlY2lmaWMgdG8gb3VyIGNoYXQgYnViYmxlcyAqL1xuLmJveE1lc3NhZ2VzIGxpLm91cnMge1xuICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcbiAgLyogU3RpY2sgdG8gdGhlIHJpZ2h0IHNpZGUsIHBsZWFzZSEgKi9cbiAgbWFyZ2luOiAycHggMCAycHggOHB4O1xufVxuXG4uYmFyQWN0aW9uTWVzc2FnZSB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMjRweDtcbn1cblxuLmlzLXJpZ2h0IHtcbiAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG5lbW9qaS1tYXJ0LmlzLWNsb3NlIHtcbiAgZGlzcGxheTogbm9uZTtcbn0iXX0= */\"","import {\n  AfterViewInit,\n  Component,\n  OnDestroy,\n  OnInit,\n  AfterContentInit,\n  AfterViewChecked\n} from \"@angular/core\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { Actions, ofType } from \"@ngrx/effects\";\nimport { Store } from \"@ngrx/store\";\nimport * as dateFns from \"date-fns\";\nimport { EmbedVideoService } from \"ngx-embed-video\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { map, tap } from \"rxjs/operators\";\nimport { Message } from \"../shared/models/message\";\nimport {\n  ActionTypes,\n  AddMessage,\n  UpdateMessage\n} from \"../shared/ngrx/actions/chat.action\";\nimport { ChatState } from \"../shared/ngrx/reducers/chat.reducers\";\nimport {\n  getConfig,\n  messages,\n  username, count\n} from \"../shared/ngrx/selectors/chat.selector\";\n\n@Component({\n  selector: \"app-chat\",\n  templateUrl: \"./chat.component.html\",\n  styleUrls: [\"./chat.component.scss\"]\n})\n/**\n * A class representing a chat component\n * @class  ChatComponent\n */\nexport class ChatComponent implements OnInit, OnDestroy {\n  private subscription: Subscription[] = [];\n  public isLoading: boolean = false;\n  public message: FormControl = new FormControl(\"\", Validators.required);\n\n  private boxScroll: Element;\n  private regexYoutube: RegExp = new RegExp(\n    \"^(https?://)?(www.)?(youtube.com|youtu.?be)/.+$\"\n  );\n\n  private firstInitMessages: boolean = false;\n  public openSmiley: boolean = false;\n  constructor(\n    private store: Store<ChatState>,\n    private action$: Actions,\n    private embedService: EmbedVideoService\n  ) {}\n\n  ngOnInit() {\n    this.boxScroll = document.getElementById(\"boxScroll\");\n    this.action$.pipe(\n      ofType(ActionTypes.ADD_MESSAGE),\n      tap(() => (this.isLoading = true))\n    );\n\n    this.action$.pipe(\n      ofType(ActionTypes.ADD_MESSAGE_SUCCESS),\n      tap(() => (this.isLoading = false))\n    );\n  }\n\n  onScroll($event) {\n    this.store.dispatch(new UpdateMessage());\n  }\n\n  get messages(): Observable<Message[]> {\n    return this.store.select(messages).pipe(\n      tap((messages: Message[]) => {\n        const completeForeach = () => {\n          if(!this.firstInitMessages){\n            setTimeout(() => {\n              this.boxScroll.scrollTop = this.boxScroll.scrollHeight;\n            })\n            this.firstInitMessages = !this.firstInitMessages;\n            this.store.dispatch(new UpdateMessage());\n          }\n        }\n        messages.forEach((element, index, array ) => {\n          if((index + 1) === messages.length){\n            completeForeach();\n          }\n        });\n        \n      })\n    );\n  }\n\n  sendMessage($event = null) {\n    const send = () => {\n      const usernameStoreSubscription = this.usernameStore.subscribe(name => {\n        this.store.dispatch(\n          new AddMessage({\n            name: name,\n            description: this.message.value\n          })\n        );\n      });\n      this.message.setValue(\"\");\n      this.subscription.push(usernameStoreSubscription);\n    };\n    if ($event != null) {\n      const getConfigSubscription = this.store\n        .select(getConfig)\n        .subscribe(config => {\n          if (config.shortcutEnter) {\n            send();\n          }\n        });\n      this.subscription.push(getConfigSubscription);\n    } else {\n      send();\n    }\n  }\n\n  addEmoji($event){\n    this.message.setValue(this.message.value + ' ' + $event.emoji.native );\n  }\n\n  get usernameStore(): Observable<string> {\n    return this.store.select(username);\n  }\n\n  get isDark(): Observable<Boolean> {\n    return this.store.select(getConfig).pipe(map(config => config.themeDark));\n  }\n\n  get isShorcut(): Observable<Boolean> {\n    return this.store\n      .select(getConfig)\n      .pipe(map(config => config.shortcutEnter));\n  }\n\n  isEmbedVideo(texte: string): boolean {\n    return this.regexYoutube.test(texte);\n  }\n\n  embedVideo(texte: string) {\n    return this.embedService.embed(texte, { image: \"thumbnail_medium\" });\n  }\n\n  toggleSmiley(){\n    this.openSmiley = !this.openSmiley;\n  }\n\n  formatDateAMPM(date: string): Observable<string> {\n    return this.store.select(getConfig).pipe(\n      map(config => {\n        if (config.clock12hour) {\n          return dateFns.format(date, \"hh:mm\");\n        } else {\n          return dateFns.format(date, \"HH:mm\");\n        }\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.forEach(subscription => subscription.unsubscribe());\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\nimport { select, Store } from \"@ngrx/store\";\nimport { Observable, of } from \"rxjs\";\nimport { distinctUntilChanged, mergeMap, tap } from \"rxjs/operators\";\nimport { Load } from \"./shared/ngrx/actions/chat.action\";\nimport { ChatState } from \"./shared/ngrx/reducers/chat.reducers\";\nimport { isLoadConfig, isLogin } from \"./shared/ngrx/selectors/chat.selector\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class IsExistName implements CanActivate {\n  constructor(private store: Store<ChatState>, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> {\n    return this.store.pipe(\n      tap(() => {\n        this.store\n          .select(isLoadConfig)\n          .subscribe(isLoad => {\n            if (!isLoad) {\n              this.store.dispatch(new Load());\n            }\n          });\n      }),\n      select(isLogin),\n      mergeMap(isLogin => {\n        if (isLogin) {\n          if (state.url === \"/login\") {\n            this.router.navigate([\"/chat\"]);\n            return of(false);\n          } else {\n            return of(true);\n          }\n        } else {\n          if (state.url === \"/login\") {\n            return of(true);\n          } else {\n            this.router.navigate([\"/login\"]);\n            return of(false);\n          }\n        }\n      })\n    );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { ChatState, initialState, configState } from '../shared/ngrx/reducers/chat.reducers';\nimport { UpdateConfig } from '../shared/ngrx/actions/chat.action';\nimport { Router } from '@angular/router';\nimport { getConfig } from '../shared/ngrx/selectors/chat.selector';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n/**\n * A class representing a Login component\n * @class  LoginComponent\n */\nexport class LoginComponent implements OnInit, OnDestroy {\n  private subscription: Subscription[] = [];\n  public username: FormControl;\n\n  constructor(\n    private store: Store<ChatState>,\n    private router: Router\n    ) { \n    this.username = new FormControl('', Validators.required);\n  }\n\n  ngOnInit() {\n    const selectConfig = this.store.select(getConfig).subscribe(config => {\n      if(config.username != ''){\n        this.router.navigate(['/'])\n      }\n    })\n    this.subscription.push(selectConfig);\n  }\n\n  sendUsername() {\n    if(this.username.valid){\n      const value: configState = {\n        ...initialState.config,\n        username: this.username.value\n      }\n      this.store.dispatch(new UpdateConfig(value));\n      this.router.navigate(['/'])\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.forEach(subscription => subscription.unsubscribe());\n  }\n\n}\n","module.exports = \".radioBox {\\n  display: flex;\\n}\\n.radioBox label {\\n  flex: 1;\\n  padding: calc(0.375em - 1px) 2.25em;\\n  border-radius: 4px;\\n  box-shadow: inset 0 -1px 2px rgba(10, 10, 10, 0.1);\\n  text-align: center;\\n  background: white;\\n}\\n.radioBox label.is-active {\\n  background: #9C0201;\\n  color: white;\\n}\\n.radioBox input {\\n  display: none;\\n}\\n.is-dark label {\\n  color: white;\\n}\\n.is-dark .radioBox label {\\n  color: black;\\n}\\n.is-dark .radioBox label.is-active {\\n  background: #9C0201;\\n  color: white;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9mcmFuY29pc2xvbmdhdHRlL0RvY3VtZW50cy9wcm9qZWN0L3J4anMtY2hhdC9jbGllbnQvc3JjL2FwcC9zZXR0aW5ncy9zZXR0aW5ncy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvc2V0dGluZ3Mvc2V0dGluZ3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0FDQ0o7QURBSTtFQUNJLE9BQUE7RUFDQSxtQ0FBQTtFQUNBLGtCQUFBO0VBQ0Esa0RBQUE7RUFDQSxrQkFBQTtFQUNBLGlCQUFBO0FDRVI7QUREUTtFQUNJLG1CQUFBO0VBQ0EsWUFBQTtBQ0daO0FEQUk7RUFDSSxhQUFBO0FDRVI7QURHSTtFQUNJLFlBQUE7QUNBUjtBREVJO0VBQ0ksWUFBQTtBQ0FSO0FEQ1E7RUFDSSxtQkFBQTtFQUNBLFlBQUE7QUNDWiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3NldHRpbmdzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJhZGlvQm94e1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgbGFiZWx7XG4gICAgICAgIGZsZXg6IDE7XG4gICAgICAgIHBhZGRpbmc6IGNhbGMoMC4zNzVlbSAtIDFweCkgMi4yNWVtO1xuICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgLTFweCAycHggcmdiYSgxMCwgMTAsIDEwLCAwLjEpO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICAmLmlzLWFjdGl2ZXtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICM5QzAyMDE7XG4gICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaW5wdXR7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxufVxuXG4uaXMtZGFya3tcbiAgICBsYWJlbHtcbiAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgIH1cbiAgICAucmFkaW9Cb3ggbGFiZWx7XG4gICAgICAgIGNvbG9yOiBibGFjaztcbiAgICAgICAgJi5pcy1hY3RpdmV7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjOUMwMjAxO1xuICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICB9XG4gICAgfVxufVxuXG4iLCIucmFkaW9Cb3gge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuLnJhZGlvQm94IGxhYmVsIHtcbiAgZmxleDogMTtcbiAgcGFkZGluZzogY2FsYygwLjM3NWVtIC0gMXB4KSAyLjI1ZW07XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgYm94LXNoYWRvdzogaW5zZXQgMCAtMXB4IDJweCByZ2JhKDEwLCAxMCwgMTAsIDAuMSk7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG59XG4ucmFkaW9Cb3ggbGFiZWwuaXMtYWN0aXZlIHtcbiAgYmFja2dyb3VuZDogIzlDMDIwMTtcbiAgY29sb3I6IHdoaXRlO1xufVxuLnJhZGlvQm94IGlucHV0IHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLmlzLWRhcmsgbGFiZWwge1xuICBjb2xvcjogd2hpdGU7XG59XG4uaXMtZGFyayAucmFkaW9Cb3ggbGFiZWwge1xuICBjb2xvcjogYmxhY2s7XG59XG4uaXMtZGFyayAucmFkaW9Cb3ggbGFiZWwuaXMtYWN0aXZlIHtcbiAgYmFja2dyb3VuZDogIzlDMDIwMTtcbiAgY29sb3I6IHdoaXRlO1xufSJdfQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ChatState, configState } from '../shared/ngrx/reducers/chat.reducers';\nimport { Store } from '@ngrx/store';\nimport { getConfig } from '../shared/ngrx/selectors/chat.selector';\nimport { UpdateConfig } from '../shared/ngrx/actions/chat.action';\nimport { Observable, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\n/**\n * A class representing a Setting component\n * @class  SettingsComponent\n */\nexport class SettingsComponent implements OnInit, OnDestroy {\n  private subscription: Subscription[] = [];\n  public settings: FormGroup;\n\n  constructor(private store: Store<ChatState>) {\n    this.settings = new FormGroup({\n      username: new FormControl('', {updateOn: \"blur\", validators: Validators.required}),\n      themeDark: new FormControl(false),\n      clock12hour: new FormControl(false),\n      shortcutEnter: new FormControl(false)\n    }) \n  }\n\n  ngOnInit() {\n    const getConfigSubscription = this.store.select(getConfig).subscribe((config: configState)=>{\n      this.settings.setValue(config, {emitEvent: false});\n    })\n    const settingsChangeSubscription = this.settings.valueChanges.subscribe((value)=> {\n      const configState: configState = {\n        username: value.username,\n        themeDark: value.themeDark,\n        clock12hour: value.clock12hour,\n        shortcutEnter: value.shortcutEnter\n      }\n      this.store.dispatch(new UpdateConfig(configState));\n    })\n    this.subscription.push(getConfigSubscription,settingsChangeSubscription);\n  }\n\n  isActive(value, nameFormControl): boolean{\n    return this.settings.get(nameFormControl).value == value;\n  }\n\n  get isDark(): Observable<Boolean>{\n    return this.store.select(getConfig).pipe(map(config => config.themeDark))\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.forEach(subscription => subscription.unsubscribe());\n  }\n\n}\n","import { Action } from \"@ngrx/store\";\nimport { ChatState, configState } from \"../reducers/chat.reducers\";\nimport { Message } from \"../../models/message\";\n\n/**\n * All the constants to define our actions\n */\nexport enum ActionTypes {\n  START_APP = \"START_APP\",\n  START_APP_SUCCESS = \"START_APP_SUCCESS\",\n  LOAD_CONFIG = \"LOAD_CONFIG\",\n  LOAD_CONFIG_SUCCESS = \"LOAD_CONFIG_SUCCESS\",\n  ADD_MESSAGE = \"ADD_MESSAGE\",\n  ADD_MESSAGE_SUCCESS = \"ADD_MESSAGE_SUCCESS\",\n  UPDATE_MESSAGE = \"UPDATE_MESSAGE\",\n  UPDATE_CONFIG = \"UPDATE_CONFIG\",\n  UPDATE_CONFIG_SUCCESS = \"UPDATE_CONFIG_SUCCESS\"\n}\n\n/**\n * Implementation of all actions that we are handle\n */\n\n/**\n * A class - Action Start\n * @class  Start\n */\nexport class Start implements Action {\n  readonly type = ActionTypes.START_APP;\n\n  /**\n   * Create a Action Start.\n   */\n  constructor() {}\n}\n\n/**\n * A class - Action StartSuccess\n * @class  StartSuccess\n */\nexport class StartSuccess implements Action {\n  readonly type = ActionTypes.START_APP_SUCCESS;\n\n  /**\n   * Create a Action Start.\n   * @param {messages} Message[] - The Array of Message.\n   */\n  constructor(public messages: Message[]) {}\n}\n\n/**\n * A class - Action Load\n * @class  Load\n */\nexport class Load implements Action {\n  readonly type = ActionTypes.LOAD_CONFIG;\n  /**\n   * Create a Action Load.\n   */\n  constructor() {}\n}\n\nexport class LoadSuccess implements Action {\n  readonly type = ActionTypes.LOAD_CONFIG_SUCCESS;\n\n  constructor(public state: configState) {}\n}\n\nexport class AddMessage implements Action {\n  readonly type = ActionTypes.ADD_MESSAGE;\n\n  constructor(public message: Message) {}\n}\n\nexport class AddMessageSuccess implements Action {\n  readonly type = ActionTypes.ADD_MESSAGE_SUCCESS;\n\n  constructor(public message: Message) {}\n}\n\nexport class UpdateMessage implements Action {\n  readonly type = ActionTypes.UPDATE_MESSAGE;\n\n  constructor() {}\n}\n\nexport class UpdateConfig implements Action {\n  readonly type = ActionTypes.UPDATE_CONFIG;\n\n  constructor(public config: configState) {}\n}\n\nexport class UpdateConfigSuccess implements Action {\n  readonly type = ActionTypes.UPDATE_CONFIG_SUCCESS;\n\n  constructor(public config: configState) {}\n}\n\nexport type Actions =\n  | Start\n  | StartSuccess\n  | Load\n  | LoadSuccess\n  | AddMessage\n  | AddMessageSuccess\n  | UpdateMessage\n  | UpdateConfig\n  | UpdateConfigSuccess;\n","import { Injectable } from \"@angular/core\";\nimport { Effect, ofType, Actions } from \"@ngrx/effects\";\nimport { of } from \"rxjs\";\nimport { map, mergeMap, tap, take} from \"rxjs/operators\";\n\nimport {\n  ActionTypes,\n  UpdateConfig,\n  UpdateConfigSuccess,\n  AddMessage,\n  AddMessageSuccess,\n  LoadSuccess,\n  Load,\n  StartSuccess,\n  Start\n} from \"../actions/chat.action\";\n\nimport {\n  initialState,\n  ChatState,\n  configState\n} from \"../reducers/chat.reducers\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { SessionstorageService } from \"../../services/sessionstorage.service\";\nimport { Router } from \"@angular/router\";\nimport { ChatService } from \"../../services/app.chat.service\";\nimport { Message } from \"../../models/message\";\nimport { Store } from \"@ngrx/store\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ChatEffects {\n  @Effect()\n  $start = this.actions.pipe(\n    ofType<Start>(ActionTypes.START_APP),\n    mergeMap(() => this.chatService.getAllMessage().pipe(take(1))),\n    map((messages:  Message[]) => {\n        return new StartSuccess(messages);\n    })\n  );\n\n  @Effect()\n  $LoadConfig = this.actions.pipe(\n    ofType<Load>(ActionTypes.LOAD_CONFIG),\n    mergeMap(messages => of(this.lsStorage.getConfig())),\n    map((lsConfig: configState) => {\n      if (lsConfig) {\n        return new LoadSuccess(lsConfig);\n      } else {\n        this.lsStorage.setConfig(initialState.config);\n        return new LoadSuccess(initialState.config);\n      }\n    })\n  );\n\n  @Effect({ dispatch: false })\n  $addMessage = this.actions.pipe(\n    ofType<AddMessage>(ActionTypes.ADD_MESSAGE),\n    map(data => {\n      this.chatService.sendMessage(data.message);\n    })\n  );\n\n  @Effect()\n  $receiveMessage = this.chatService.getNewMessage().pipe(\n    map(data => {\n      return new AddMessageSuccess(data);\n    })\n  );\n\n  @Effect()\n  $config = this.actions.pipe(\n    ofType<UpdateConfig>(ActionTypes.UPDATE_CONFIG),\n    map(action => {\n      let configChange = [];\n      const getConfig: configState = this.lsStorage.getConfig();\n      const newConfig: configState = {\n        ...getConfig,\n        ...action.config\n      };\n      this.lsStorage.setConfig(newConfig);\n\n      for (var property in getConfig) {\n        if (getConfig[property] != newConfig[property]) {\n          configChange.push(property);\n        }\n      }\n\n      const toastrMessange = () => {\n        this.toastr.success(\n          `Success Change`,\n          `Update Settings - ${configChange.join(\",\")}`, \n          { timeOut: 3000 }\n        );\n      }\n\n      if(configChange[0] === 'username' && newConfig.username != \"\"){\n        toastrMessange();\n      }else if(configChange[0] !== 'username'){\n        toastrMessange();\n      }\n\n      return new UpdateConfigSuccess(newConfig);\n    })\n  );\n\n  constructor(\n    private lsStorage: SessionstorageService,\n    private toastr: ToastrService,\n    private actions: Actions,\n    private chatService: ChatService\n  ) {}\n}\n","import { ActionTypes } from \"../actions/chat.action\";\n\nexport interface configState {\n  username: string;\n  themeDark: boolean;\n  clock12hour: boolean;\n  shortcutEnter: boolean;\n}\n\nexport interface ChatState {\n  isLoadConfig: boolean;\n  config: configState;\n  messages: {\n    user: string;\n    message: string;\n    read: boolean;\n    date: string;\n  }[],\n  countNotRead: number\n}\n\nexport const initialState: ChatState = {\n  isLoadConfig: false,\n  config: {\n    username: \"\",\n    themeDark: false,\n    clock12hour: false,\n    shortcutEnter: false\n  },\n  messages: [],\n  countNotRead: 0\n};\n\nexport function ChatReducer(state: ChatState = initialState, action) {\n  switch (action.type) {\n    case ActionTypes.LOAD_CONFIG_SUCCESS:\n      return {\n        ...state,\n        config: action.state,\n        isLoadConfig: true\n      };\n    case ActionTypes.START_APP_SUCCESS:\n      return {\n        ...state,\n        messages: action.messages.map(message => {\n          message.read = false;\n          return message;\n        })\n      };\n    case ActionTypes.ADD_MESSAGE_SUCCESS:\n      action.message.read = false;\n      return {\n        ...state,\n        messages: [...state.messages, action.message],\n        countNotRead: [...state.messages, action.message].filter(message => message.read === false).length\n      };\n    case ActionTypes.UPDATE_MESSAGE:\n      const newStates = state.messages.map(message => {\n        message.read = true\n        return message;\n      })\n      return {\n        ...state,\n        messages: newStates,\n        countNotRead: newStates.filter(message => message.read == false).length\n      };\n    case ActionTypes.UPDATE_CONFIG_SUCCESS:\n      return {\n        ...state,\n        config: action.config\n      };\n    default:\n      return state;\n  }\n}\n","import { createSelector } from '@ngrx/store';\n\nexport const getChatState = state => state.ChatReducer;\n\nexport const getConfig = createSelector(getChatState, state => state && state.config ? state.config : null);\n\nexport const isLogin = createSelector(getChatState, state => state && state.config && state.config.username && state.config.username != \"\" ? true : false);\n\nexport const isLoadConfig = createSelector(getChatState, state => state && state.isLoadConfig);\n\nexport const username = createSelector(getChatState, state => state && state.config && state.config.username ? state.config.username : undefined);\n\nexport const messages = createSelector(getChatState, state => state && state.messages ? state.messages : [] );\n\nexport const count = createSelector(getChatState, state => state && state.countNotRead ? state.countNotRead : 0 );","\nimport { Observable } from 'rxjs';\nimport * as io from 'socket.io-client';\nimport { Injectable } from '@angular/core';\nimport {Message} from '../models/message'\nimport {environment as env} from 'src/environments/environment.prod';\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class ChatService {\n    private url = env.urlServer;\n    private _socket;    \n\n    constructor() {\n        this._socket = io(this.url);\n    }\n\n    get socket(){\n        return this._socket;\n    }\n\n    public sendMessage(message: Message) {\n        this.socket.emit('message', message);\n    }\n\n    public getNewMessage(): Observable<Message>{\n        return Observable.create((observer) => {\n            this.socket.on('message', (message) => {\n                observer.next(message);\n            });\n        });\n    }\n\n    public getAllMessage(): Observable<Message[]>{\n        return Observable.create((observer) => {\n            this.socket.on('messages', (messages) => {\n                observer.next(messages);\n            });\n        });\n    }\n}","import {Injectable} from '@angular/core';\nimport {environment as env} from '../../../environments/environment';\nimport { configState } from '../ngrx/reducers/chat.reducers';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionstorageService {\n\n  constructor() {\n  }\n\n  getConfig(): configState {\n    return JSON.parse(sessionStorage.getItem(env.nLocalstorage));\n  }\n\n  setConfig(newConfig: configState) {\n    sessionStorage.setItem(env.nLocalstorage, JSON.stringify(newConfig));\n  }\n\n\n}\n","export const environment = {\n  production: true,\n  nLocalstorage: 'ngrx-chat_chat_config',\n  urlServer: 'http://localhost:3000'\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  nLocalstorage: 'ngrx-chat_chat_config',\n  urlServer: 'http://localhost:3000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":""}